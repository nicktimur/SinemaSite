// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SinemaSite.Models;

#nullable disable

namespace SinemaSite.Migrations
{
    [DbContext(typeof(CinemadbContext))]
    [Migration("20240722114019_EksikleriEkleme")]
    partial class EksikleriEkleme
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SinemaSite.Models.Film", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasColumnName("guncelleme_tarihi");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("GuncellemeTarihi"));

                    b.Property<string>("Isim")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("isim");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("olusturulma_tarihi")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("timestamp")
                        .HasColumnName("silinme_tarihi");

                    b.Property<int?>("Sure")
                        .HasColumnType("int")
                        .HasColumnName("sure");

                    b.Property<string>("Tur")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("film", (string)null);
                });

            modelBuilder.Entity("SinemaSite.Models.Gosterim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("FilmId")
                        .HasColumnType("bigint")
                        .HasColumnName("film_id");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasColumnName("guncelleme_tarihi");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("GuncellemeTarihi"));

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("olusturulma_tarihi")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<long?>("SalonId")
                        .HasColumnType("bigint")
                        .HasColumnName("salon_id");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("timestamp")
                        .HasColumnName("silinme_tarihi");

                    b.Property<DateTime?>("SunumTarihi")
                        .HasColumnType("datetime")
                        .HasColumnName("sunum_tarihi");

                    b.Property<float>("Ucret")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "FilmId" }, "film_id");

                    b.HasIndex(new[] { "SalonId" }, "salon_id");

                    b.ToTable("gosterim", (string)null);
                });

            modelBuilder.Entity("SinemaSite.Models.Kullanici", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("AktifMi")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("aktif_mi");

                    b.Property<float>("Bakiye")
                        .HasColumnType("float");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasColumnName("guncelleme_tarihi");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("GuncellemeTarihi"));

                    b.Property<string>("Isim")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("isim");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("kullanici_adi");

                    b.Property<int>("KullaniciTipi")
                        .HasColumnType("int")
                        .HasColumnName("kullanici_tipi");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("olusturulma_tarihi")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sifre");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("timestamp")
                        .HasColumnName("silinme_tarihi");

                    b.Property<DateTime?>("SonAktifTarih")
                        .HasColumnType("timestamp")
                        .HasColumnName("son_aktif_tarih");

                    b.Property<string>("Soyisim")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("soyisim");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Email" }, "email")
                        .IsUnique();

                    b.HasIndex(new[] { "KullaniciAdi" }, "kullanici_adi")
                        .IsUnique();

                    b.ToTable("kullanici", (string)null);
                });

            modelBuilder.Entity("SinemaSite.Models.Salon", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasColumnName("guncelleme_tarihi");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("GuncellemeTarihi"));

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("olusturulma_tarihi")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("SalonMumarasi")
                        .HasColumnType("int")
                        .HasColumnName("salon_mumarasi");

                    b.Property<string>("SalonTipi")
                        .IsRequired()
                        .HasColumnType("enum('Standart','IMAX','4DX')")
                        .HasColumnName("salon_tipi");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("timestamp")
                        .HasColumnName("silinme_tarihi");

                    b.Property<long?>("SinemaId")
                        .HasColumnType("bigint")
                        .HasColumnName("sinema_id");

                    b.Property<int?>("ToplamKoltuk")
                        .HasColumnType("int")
                        .HasColumnName("toplam_koltuk");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "SinemaId" }, "sinema_id");

                    b.ToTable("salon", (string)null);
                });

            modelBuilder.Entity("SinemaSite.Models.Sinema", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("konum");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasColumnName("guncelleme_tarihi");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("GuncellemeTarihi"));

                    b.Property<string>("Isim")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("isim");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("olusturulma_tarihi")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("timestamp")
                        .HasColumnName("silinme_tarihi");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("sinema", (string)null);
                });

            modelBuilder.Entity("SinemaSite.Models.Ticket", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("GosterimId")
                        .HasColumnType("bigint")
                        .HasColumnName("gosterim_id");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasColumnName("guncelleme_tarihi");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("GuncellemeTarihi"));

                    b.Property<long?>("MusteriId")
                        .HasColumnType("bigint")
                        .HasColumnName("musteri_id");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("olusturulma_tarihi")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateOnly?>("SatinAlimTarihi")
                        .HasColumnType("date")
                        .HasColumnName("satin_alim_tarihi");

                    b.Property<int?>("Satır")
                        .HasColumnType("int")
                        .HasColumnName("satır");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("timestamp")
                        .HasColumnName("silinme_tarihi");

                    b.Property<int?>("Sutun")
                        .HasColumnType("int")
                        .HasColumnName("sutun");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "GosterimId" }, "gosterim_id");

                    b.HasIndex(new[] { "MusteriId" }, "musteri_id");

                    b.ToTable("tickets", (string)null);
                });

            modelBuilder.Entity("SinemaSite.Models.Gosterim", b =>
                {
                    b.HasOne("SinemaSite.Models.Film", "Film")
                        .WithMany("Gosterims")
                        .HasForeignKey("FilmId")
                        .HasConstraintName("gosterim_ibfk_2");

                    b.HasOne("SinemaSite.Models.Salon", "Salon")
                        .WithMany("Gosterims")
                        .HasForeignKey("SalonId")
                        .HasConstraintName("gosterim_ibfk_1");

                    b.Navigation("Film");

                    b.Navigation("Salon");
                });

            modelBuilder.Entity("SinemaSite.Models.Salon", b =>
                {
                    b.HasOne("SinemaSite.Models.Sinema", "Sinema")
                        .WithMany("Salons")
                        .HasForeignKey("SinemaId")
                        .HasConstraintName("salon_ibfk_1");

                    b.Navigation("Sinema");
                });

            modelBuilder.Entity("SinemaSite.Models.Ticket", b =>
                {
                    b.HasOne("SinemaSite.Models.Gosterim", "Gosterim")
                        .WithMany("Tickets")
                        .HasForeignKey("GosterimId")
                        .HasConstraintName("tickets_ibfk_1");

                    b.HasOne("SinemaSite.Models.Kullanici", "Musteri")
                        .WithMany("Tickets")
                        .HasForeignKey("MusteriId")
                        .HasConstraintName("tickets_ibfk_2");

                    b.Navigation("Gosterim");

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("SinemaSite.Models.Film", b =>
                {
                    b.Navigation("Gosterims");
                });

            modelBuilder.Entity("SinemaSite.Models.Gosterim", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("SinemaSite.Models.Kullanici", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("SinemaSite.Models.Salon", b =>
                {
                    b.Navigation("Gosterims");
                });

            modelBuilder.Entity("SinemaSite.Models.Sinema", b =>
                {
                    b.Navigation("Salons");
                });
#pragma warning restore 612, 618
        }
    }
}
