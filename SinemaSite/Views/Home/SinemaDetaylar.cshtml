@{
    var user = Context.Items["CurrentUser"] as Kullanici;
    ViewData["Title"] = "Detaylar";
    var filmler = ViewBag.Filmler as List<SinemaSite.Models.Film>;
    var sinemalarJson = ViewBag.Sinemalar as string;
    var sinema = Newtonsoft.Json.JsonConvert.DeserializeObject<List<Sinema>>(sinemalarJson)[0];
}
@functions {
    // Tarih hesaplama
    public List<DateOnly> GetDatesForTabs()
    {
        var now = DateOnly.FromDateTime(DateTime.Now);

        // Bu haftanın cuması
        var startOfWeek = now.AddDays(-(int)now.DayOfWeek + (int)DayOfWeek.Friday);

        // Geçmiş haftanın cuması (bir hafta önce)
        var startOfPreviousWeek = startOfWeek.AddDays(-7);

        // Bu tarihten itibaren bir hafta sürecek tarihler
        var dates = new List<DateOnly>();
        for (var date = startOfPreviousWeek; date < startOfWeek; date = date.AddDays(1))
        {
            dates.Add(date);
        }

        return dates;
    }

    // Tarih kontrolü
    public bool IsTabEnabled(DateOnly date)
    {
        return DateOnly.FromDateTime(DateTime.Now) <= date;
    }
}

@{
    var tabDates = GetDatesForTabs();
}
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0">@sinema.Isim Gösterimleri</h1>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->
    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                @if (sinema != null)
                {
                    <div class="col-md-12">
                        <!-- Film Bilgileri -->
                        <div class="film-details-card">
                            <div class="film-details-body">
                                <h5 class="film-title">@sinema.Isim</h5>
                                <p class="film-info">
                                    <strong>Adresi:</strong>
                                    @sinema.Adres
                                </p>
                                @foreach (var film in filmler)
                                {
                                    var id = film.Id;
                                    var str = "film" + id;
                                    <div class="film-card">
                                        <div class="film-card-image">
                                            <img src="@film.ResimYolu" alt="@film.Isim" />
                                        </div>
                                        <div class="film-card-content">
                                            <h6 class="film-card-title">@film.Isim</h6>
                                            <div class="film-card-empty-space">
                                                <div class="row">
                                                    <div class="col-md-12">
                                                        <div class="card">
                                                            <div class="card-header p-2">
                                                                <ul class="nav nav-pills">
                                                                    @foreach (var date in tabDates)
                                                                    {
                                                                        var tabId = $"{str}-{date:yyyyMMdd}";
                                                                        var isActive = date == DateOnly.FromDateTime(DateTime.Now);
                                                                        var isEnabled = IsTabEnabled(date);
                                                                        <li class="nav-item">
                                                                            <a class="nav-link @(isActive ? "active" : "") @(isEnabled ? "" : "disabled")" href="#@tabId" data-toggle="tab">
                                                                                @date
                                                                            </a>
                                                                        </li>
                                                                    }
                                                                </ul>
                                                            </div>
                                                            <div class="card-body">
                                                                <div class="tab-content">
                                                                    @foreach (var date in tabDates)
                                                                    {
                                                                        bool canShow = true; 
                                                                        var tabId = $"{str}-{date:yyyyMMdd}";
                                                                        <div class="tab-pane @(date == DateOnly.FromDateTime(DateTime.Now) ? "active" : "")" id="@tabId">
                                                                            @foreach (var salon in sinema.Salons)
                                                                            {
                                                                                bool hasButtons = salon.Gosterims.Any(gosterim => gosterim.FilmId == film.Id && gosterim.SunumTarihi == date);
                                                                                if (hasButtons)
                                                                                {
                                                                                    canShow = false;
                                                                                }
                                                                                string salonStyle = hasButtons ? "" : "display:none;";
                                                                                string logoPath = salon.SalonTipi switch
                                                                                {
                                                                                    1 => "/img/icons/IMAX.png",
                                                                                    2 => "/images/4DX.png",
                                                                                    _ => ""
                                                                                };

                                                                                <div class="d-flex align-items-center mb-2">
                                                                                    <span class="me-2" style="@salonStyle">Salon @salon.SalonNumarasi :</span>
                                                                                    @if (!string.IsNullOrEmpty(logoPath))
                                                                                    {
                                                                                        <div class="" style="@salonStyle">
                                                                                            <img src="@logoPath" alt="Salon Tipi Logosu"  class="icon" />
                                                                                        </div>
                                                                                    }
                                                                                    @foreach (var gosterim in salon.Gosterims)
                                                                                    {
                                                                                        if (gosterim.FilmId == film.Id && gosterim.SunumTarihi == date)
                                                                                        {
                                                                                            var showTime = gosterim.SunumSaati;
                                                                                            var isPast = DateTime.Now.TimeOfDay > showTime.ToTimeSpan(); // Geçmiş saati kontrol et
                                                                                            var buttonClass = isPast ? "btn btn-secondary disabled" : "btn btn-primary";
                                                                                            var buttonStr = "Purchase_" + gosterim.Id;

                                                                                            <div class="col-lg-auto">
                                                                                                <button class="btn @buttonClass" role="button" data-bs-toggle="modal" data-bs-target="#@buttonStr" onclick="fetchGosterimDetails('@gosterim.Id', '@buttonStr')">
                                                                                                    @showTime
                                                                                                </button>
                                                                                            </div>
                                                                                            <!-- Modal -->
                                                                                            <div class="modal fade" id="@buttonStr" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" >
                                                                                                <div class="modal-dialog modal-xl">
                                                                                                    <div class="modal-content">
                                                                                                        <div class="modal-header">
                                                                                                            <h4 class="modal-title">Gösterim Bilgileri</h4>
                                                                                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">&times;</button>
                                                                                                        </div>
                                                                                                        <div class="modal-body">
                                                                                                            <div class="col-lg-12" id="modal-body-content-@buttonStr">
                                                                                                                <!-- İçerik buraya yüklenecek -->
                                                                                                                <p>Yükleniyor...</p>
                                                                                                            </div>
                                                                                                            <div class="col-lg-8" id="modal-body-ticket-@buttonStr">
                                                                                                            </div>
                                                                                                        </div>
                                                                                                        <div class="modal-footer justify-content-between">
                                                                                                            <button type="button" class="btn btn-default" data-bs-dismiss="modal">Close</button>
                                                                                                            <button type="button" onclick="submitSelectedSeats()" class="btn btn-primary"
                                                                                                            @(user == null ? "disabled" : "")>
                                                                                                                @(user == null ? "Önce Giriş Yapmalısın" : "Satın Al")
                                                                                                            </button>
                                                                                                        </div>
                                                                                                    </div>
                                                                                                    <!-- /.modal-content -->
                                                                                                </div>
                                                                                                <!-- /.modal-dialog -->
                                                                                            </div>
                                                                                            <!-- /.modal -->
                                                                                        }
                                                                                    }
                                                                                </div>
                                                                            }
                                                                            @{
                                                                                string notFound = canShow ? "" : "display:none;";
                                                                            }
                                                                            <div class="d-flex align-items-center mb-2">
                                                                                <span class="me-2" style="@notFound">Bu film için gösterim bulunmamakta.</span>
                                                                            </div>
                                                                            

                                                                        </div>
                                                                    }
                                                                </div>
                                                            </div><!-- /.card-body -->
                                                        </div><!-- /.card -->
                                                    </div><!-- /.col -->
                                                </div><!-- /.row -->
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
            <!-- /.row -->
        </div><!-- /.container-fluid -->
    </section>
    <!-- /.content -->
</div>
<!-- SweetAlert2 -->
<script src="/lib/sweetalert2/sweetalert2.min.js"></script>
<!-- Toastr -->
<script src="/lib/toastr/toastr.min.js"></script>
<script>
    const selectedSeats = new Set();
    var seatPrice;
    var show;
    function fetchGosterimDetails(gosterimId, modalId) {
        selectedSeats.clear();
        const url = `/GetGosterimInfo/${gosterimId}`;
        fetch(url)
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                let seatingHtml = '';
                const rows = data.salon.satir;
                const cols = data.salon.sutun;
                // Biletler için bir set oluşturuluyor
                const bookedSeats = new Set(data.tickets.map(ticket => `${ticket.satir}-${ticket.sutun}`));
                seatPrice = data.ucret;
                show = data.id;
                for (let i = 1; i <= rows; i++) {
                    let rowHtml = '';
                    for (let j = 1; j <= cols; j++) {
                        const seatLabel = String.fromCharCode(64 + i) + '-' + (j); // A, B, C... numaraları
                        const isBooked = bookedSeats.has(`${i}-${j}`);
                        rowHtml += `
                                    <div class="seat ${isBooked ? 'booked' : ''}" data-row="${i}" data-col="${j}" onclick="${isBooked ? '' : `selectSeat(${i}, ${j})`}">
                                    ${seatLabel}
                                </div>
                            `;
                    }
                    seatingHtml += `<div class="row">${rowHtml}</div>`;
                }

                document.getElementById(`modal-body-content-${modalId}`).innerHTML = `
                        <div class="modal-content">
                            <div class="modal-info">
                                <img src="${data.film.resimYolu}" alt="${data.film.isim}" class="mb-1" />
                                <h5>Film: ${data.film.isim}</h5>
                                <p><strong>Türler:</strong> ${data.film.turler.join(", ")}</p>
                                <p><strong>Vizyon Tarihi:</strong> ${new Date(data.film.vizyonTarihi).toLocaleDateString()}</p>
                                <p><strong>Salon:</strong> ${data.salon.salonNumarasi}. Salon</p>
                                <p><strong>Sinema:</strong> ${data.salon.sinema.isim}</p>
                                <p><strong>Adres:</strong> ${data.salon.sinema.adres}</p>
                                <p><strong>Başlangıç Saati:</strong> ${data.sunumSaati}</p>
                                <p><strong>Ücret:</strong> ${data.ucret} TL</p>
                            </div>
                            <div class="screen-label">Perde</div>
                            <div class="seating-container">
                                ${seatingHtml}
                            </div>
                        </div>
                            <div class="selected-seats">
                                    <h5>Seçilen Koltuklar:</h5>
                                    <ul id="selected-seats-list">
                                        <!-- Seçilen koltuklar buraya eklenecek -->
                                    </ul>
                             </div>
                    `;
            })
            .catch(error => {
                console.error('Veri çekilirken bir hata oluştu:', error);
                document.getElementById(`modal-body-content-${modalId}`).innerHTML = `<p>Veri yüklenemedi. Lütfen daha sonra tekrar deneyin.</p>`;
            });
    }


    function selectSeat(row, col) {
        const seat = document.querySelector(`.seat[data-row="${row}"][data-col="${col}"]`);
        if (seat && !seat.classList.contains('booked')) {
            if (selectedSeats.has(`${row}-${col}`)) {
                // Daha önce seçilmiş koltuğa tekrar tıklanırsa, seçimden çıkar
                seat.classList.remove('selected');
                selectedSeats.delete(`${row}-${col}`);
            } else {
                // Seçim ekle
                seat.classList.add('selected');
                selectedSeats.add(`${row}-${col}`);
            }

            // Seçilen koltukları listele
            updateSelectedSeatsList();
        }
    }

    function updateSelectedSeatsList() {
        const list = document.getElementById('selected-seats-list');
        list.innerHTML = '';
        selectedSeats.forEach(seat => {
            const [row, col] = seat.split('-');
            const seatLabel = String.fromCharCode(65 + parseInt(row) - 1) + '-' + (parseInt(col));
            const listItem = document.createElement('li');
            listItem.textContent = seatLabel;
            list.appendChild(listItem);
        });
    }

    function submitSelectedSeats() {

        var totalPrice = selectedSeats.size * seatPrice
        const seatArray = Array.from(selectedSeats);
        // Koltukları satır ve sütun olarak dönüştür
        const seats = seatArray.map(seat => {
            const [row, col] = seat.split('-').map(Number);
            return { row, col };
        });
        var showId = show;

        // Fetch isteği ile verileri gönder
        fetch('/submitSeats', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                seats: seats,
                toplamFiyat: totalPrice,
                gosterimId: showId
            })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    window.location.href = '/Account/Profile';
                } 
                else {
                    alert('Satın alma işlemi başarısız oldu. ' + data.message);
                }
            })
            .catch(error => {
                console.error('Bir hata oluştu:', error);
                alert(error.message);
            });
    }

    function ShowToastr(message){
        var Toast = Swal.mixin({
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        });
        Toast.fire({
            icon: 'success',
            title: message
        })
    }

  

</script>

<style>
    .film-card {
        display: flex;
        border: 1px solid #ddd;
        border-radius: 5px;
        margin-bottom: 15px;
        overflow: hidden;
    }

    .film-card-image {
        flex: 0 0 150px;
        overflow: hidden;
    }

        .film-card-image img {
            width: 100%;
            height: auto;
        }

    .film-card-content {
        padding: 10px;
        flex: 1;
    }

    .film-card-title {
        margin: 0;
        font-size: 18px;
    }

    .film-card-empty-space {
        height: auto;
        margin-bottom: 10px;
    }

    .icon-container {
        width: calc(100% - 20px);
        margin-top: 10px;
    }

    .icon {
        margin: 0 5px;
    }
    /* Modal içeriği için düzenlemeler */
    .modal-content {
        display: flex;
        flex-direction: column;
        gap: 20px;
    }

    .modal-info {
        margin-bottom: 10px;
        padding: 10px 15px; /* İçerik etrafında biraz boşluk bırakır */
        display: flex;
        gap: 10px; /* Elemanlar arasındaki boşluk */
    }

        .modal-info img {
            width: 100%;
            max-width: 200px;
            height: auto;
        }

        .modal-info h5, .modal-info p {
            margin: 5px 0;
        }
    /* Flexbox düzenlemesi için CSS */
    .seating-container {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .row {
        display: flex;
        justify-content: center;
        margin-bottom: 10px; /* Satırlar arasındaki boşluk */
    }

    .seat {
        width: 40px;
        height: 40px;
        background-color: #d3d3d3;
        border: 1px solid #000;
        border-radius: 5px;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        text-align: center;
        margin: 2px;
        font-size: 12px; /* Yazı boyutu */
    }

        .seat:hover {
            background-color: #a9a9a9;
        }

    .booked {
        background-color: #808080; /* Seçilemez koltuklar için renk */
        cursor: not-allowed;
    }

    .selected {
        background-color: #00ff00; /* Seçilen koltuk için renk */
    }
    /* Seçilen koltuklar listesi için CSS */
    .selected-seats {
        margin-top: 20px;
    }

        .selected-seats ul {
            list-style: none;
            padding: 0;
        }

        .selected-seats li {
            margin: 5px 0;
            font-size: 14px;
            color: #000;
        }

    /* Perde yazısı için stil */
    .screen-label {
        text-align: center;
        font-size: 16px; /* Yazı boyutu */
        color: #000; /* Yazı rengi */
        font-weight: bold;
        margin: 20px 0; /* Perde yazısının üst ve alt boşluğu */
    }

</style>
